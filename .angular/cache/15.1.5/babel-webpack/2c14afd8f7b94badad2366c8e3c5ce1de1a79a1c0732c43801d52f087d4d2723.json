{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Observable_1 = require(\"../Observable\");\nvar isArray_1 = require(\"../util/isArray\");\nvar isFunction_1 = require(\"../util/isFunction\");\nvar map_1 = require(\"../operators/map\");\nfunction fromEventPattern(addHandler, removeHandler, resultSelector) {\n  if (resultSelector) {\n    return fromEventPattern(addHandler, removeHandler).pipe(map_1.map(function (args) {\n      return isArray_1.isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n    }));\n  }\n  return new Observable_1.Observable(function (subscriber) {\n    var handler = function () {\n      var e = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        e[_i] = arguments[_i];\n      }\n      return subscriber.next(e.length === 1 ? e[0] : e);\n    };\n    var retValue;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!isFunction_1.isFunction(removeHandler)) {\n      return undefined;\n    }\n    return function () {\n      return removeHandler(handler, retValue);\n    };\n  });\n}\nexports.fromEventPattern = fromEventPattern;\n//# sourceMappingURL=fromEventPattern.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}