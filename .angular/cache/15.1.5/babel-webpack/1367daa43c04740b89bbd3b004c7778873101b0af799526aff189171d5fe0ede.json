{"ast":null,"code":"import { TICKETS_MOCKED } from '../../mocks/tickets.mock';\nimport { BehaviorSubject } from 'rxjs/index';\nimport * as i0 from \"@angular/core\";\nvar TicketService = /** @class */function () {\n  function TicketService() {\n    /**\n     * Services Documentation:\n     * https://angular.io/docs/ts/latest/tutorial/toh-pt4.html\n     */\n    this.ticketList = TICKETS_MOCKED;\n    /**\n     * Observable which contains the list of the tickets.\n     * Naming convention: Add '$' at the end of the variable name to highlight it as an Observable.\n     */\n    this.tickets$ = new BehaviorSubject(this.ticketList);\n  }\n  TicketService.prototype.addTicket = function (ticket) {\n    this.ticketList.push(ticket);\n    // You need here to update the list of ticket and then update our observable (Subject) with the new list\n    // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\n  };\n\n  TicketService.prototype.deleteTicket = function (t) {\n    var _this = this;\n    this.ticketList.filter(function (item, index) {\n      if (t.title == item.title) {\n        _this.ticketList.splice(index, 1);\n      }\n    });\n  };\n  TicketService.ɵfac = function TicketService_Factory(t) {\n    return new (t || TicketService)();\n  };\n  TicketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TicketService,\n    factory: TicketService.ɵfac,\n    providedIn: 'root'\n  });\n  return TicketService;\n}();\nexport { TicketService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}